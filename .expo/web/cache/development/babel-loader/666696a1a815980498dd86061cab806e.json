{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport SendingData from \"./SendingData\";\nimport { Typography } from \"@mui/material\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar FetchingData = function FetchingData() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      post = _useState2[0],\n      setPost = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      noMore = _useState6[0],\n      setNoMore = _useState6[1];\n\n  var fetching = function fetching() {\n    try {\n      fetch(\"https://hn.algolia.com/api/v1/search_by_date?tags=story&page=\" + page).then(function (res) {\n        return res;\n      }).then(function (res) {\n        var _res$data;\n\n        var response = res == null ? void 0 : (_res$data = res.data) == null ? void 0 : _res$data.hits;\n        console.log('=======', response);\n\n        if ((response == null ? void 0 : response.length) > 0 || (response == null ? void 0 : response.length) < 20) {\n          setNoMore(true);\n        }\n\n        setPage(page + 1);\n        setPost([].concat(_toConsumableArray(post), _toConsumableArray(response)));\n      });\n    } catch (_unused) {}\n  };\n\n  useEffect(function () {\n    fetching();\n  }, []);\n  useEffect(function () {\n    if (page > 0) {\n      var timer = setInterval(function () {\n        fetching();\n      }, 10000);\n      return function () {\n        return clearInterval(timer);\n      };\n    }\n  }, [page]);\n  return _jsxs(\"div\", {\n    \"data-testid\": \"hide\",\n    children: [_jsx(Typography, {\n      variant: \"h5\",\n      style: {\n        textAlign: \"center\"\n      },\n      \"data-testid\": \"heading\",\n      children: \"Posts\"\n    }), post.length > 0 && _jsx(SendingData, {\n      post: post,\n      fetching: fetching,\n      noMore: noMore\n    })]\n  });\n};\n\nexport default FetchingData;","map":{"version":3,"sources":["C:/Users/extwe/Downloads/DataGridFetchingPosts/src/FetchingData.tsx"],"names":["React","useState","useEffect","SendingData","Typography","FetchingData","post","setPost","page","setPage","noMore","setNoMore","fetching","fetch","then","res","response","data","hits","console","log","length","timer","setInterval","clearInterval","textAlign"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,WAAP;AACA,SAASC,UAAT,QAA2B,eAA3B;;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,kBAAwBJ,QAAQ,CAAM,EAAN,CAAhC;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBN,QAAQ,CAAM,CAAN,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA4BR,QAAQ,CAAM,IAAN,CAApC;AAAA;AAAA,MAAOS,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,QAAI;AACFC,MAAAA,KAAK,mEAC6DL,IAD7D,CAAL,CAEEM,IAFF,CAEO,UAAAC,GAAG;AAAA,eAAIA,GAAJ;AAAA,OAFV,EAEmBD,IAFnB,CAEwB,UAACC,GAAD,EAAa;AAAA;;AACnC,YAAMC,QAAQ,GAAGD,GAAH,iCAAGA,GAAG,CAAEE,IAAR,qBAAG,UAAWC,IAA5B;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,QAAvB;;AAaA,YAAI,CAAAA,QAAQ,QAAR,YAAAA,QAAQ,CAAEK,MAAV,IAAmB,CAAnB,IAAwB,CAAAL,QAAQ,QAAR,YAAAA,QAAQ,CAAEK,MAAV,IAAmB,EAA/C,EAAmD;AACjDV,UAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AACDF,QAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACAD,QAAAA,OAAO,8BAAKD,IAAL,sBAAcU,QAAd,GAAP;AACD,OAtBD;AAwBD,KAzBD,CAyBE,gBAAM,CAAG;AACZ,GA3BD;;AA6BAd,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,QAAQ;AACT,GAFQ,EAEN,EAFM,CAAT;AAGAV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIM,IAAI,GAAG,CAAX,EAAc;AACZ,UAAMc,KAAK,GAAGC,WAAW,CAAC,YAAM;AAC9BX,QAAAA,QAAQ;AACT,OAFwB,EAEtB,KAFsB,CAAzB;AAGA,aAAO;AAAA,eAAMY,aAAa,CAACF,KAAD,CAAnB;AAAA,OAAP;AACD;AACF,GAPQ,EAON,CAACd,IAAD,CAPM,CAAT;AASA,SACE;AAAK,mBAAY,MAAjB;AAAA,eACE,KAAC,UAAD;AACE,MAAA,OAAO,EAAC,IADV;AAEE,MAAA,KAAK,EAAE;AAAEiB,QAAAA,SAAS,EAAE;AAAb,OAFT;AAGE,qBAAY,SAHd;AAAA;AAAA,MADF,EAQGnB,IAAI,CAACe,MAAL,GAAc,CAAd,IACC,KAAC,WAAD;AAAa,MAAA,IAAI,EAAEf,IAAnB;AAAyB,MAAA,QAAQ,EAAEM,QAAnC;AAA6C,MAAA,MAAM,EAAEF;AAArD,MATJ;AAAA,IADF;AAcD,CA3DD;;AA6DA,eAAeL,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SendingData from \"./SendingData\";\nimport { Typography } from \"@mui/material\";\n\nconst FetchingData = () => {\n  const [post, setPost] = useState<any>([]);\n  const [page, setPage] = useState<any>(0);\n  const [noMore, setNoMore] = useState<any>(true);\n  const fetching = () => {\n    try {\n      fetch(\n        `https://hn.algolia.com/api/v1/search_by_date?tags=story&page=${page}`\n      ).then(res => res).then((res:any) => {\n        const response = res?.data?.hits;\n        console.log('=======', response)\n        // let temp: any = [];\n        // {\n        //   response?.map((item: any, index: number) => {\n        //     temp.push({\n        //       id: item.objectID + '' + index,\n        //       title: item.title,\n        //       url: item.url,\n        //       created_at: item.created_at,\n        //       author: item.author,\n        //     });\n        //   });\n        // }\n        if (response?.length > 0 || response?.length < 20) {\n          setNoMore(true);\n        }\n        setPage(page + 1);\n        setPost([...post, ...response]);\n      })\n      \n    } catch { }\n  };\n\n  useEffect(() => {\n    fetching();\n  }, []);\n  useEffect(() => {\n    if (page > 0) {\n      const timer = setInterval(() => {\n        fetching();\n      }, 10000);\n      return () => clearInterval(timer);\n    }\n  }, [page]);\n\n  return (\n    <div data-testid=\"hide\">\n      <Typography\n        variant=\"h5\"\n        style={{ textAlign: \"center\" }}\n        data-testid=\"heading\"\n      >\n        Posts\n      </Typography>\n      {post.length > 0 && (\n        <SendingData post={post} fetching={fetching} noMore={noMore} />\n      )}\n    </div>\n  );\n};\n\nexport default FetchingData;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SendingData from \"./SendingData\";\nimport { Typography } from \"@mui/material\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar FetchingData = function FetchingData() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      post = _useState2[0],\n      setPost = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      noMore = _useState6[0],\n      setNoMore = _useState6[1];\n\n  var fetching = function fetching() {\n    return _regeneratorRuntime.async(function fetching$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"page no\", page);\n            axios.get(\"https://hn.algolia.com/api/v1/search_by_date?tags=story&page=\" + page).then(function (res) {\n              var _res$data, _res$data2, _res$data2$hits;\n\n              setNoMore((res == null ? void 0 : (_res$data = res.data) == null ? void 0 : _res$data.nbPages) >= 0);\n              var temp = [];\n              res == null ? void 0 : (_res$data2 = res.data) == null ? void 0 : (_res$data2$hits = _res$data2.hits) == null ? void 0 : _res$data2$hits.map(function (i, index) {\n                temp.push({\n                  id: i.objectID + \"\" + index,\n                  title: i.title,\n                  url: i.url,\n                  author: i.created_at,\n                  Created: i.author\n                });\n              });\n              setPage(page + 1);\n              setPost([].concat(_toConsumableArray(post), temp));\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    fetching();\n    return function () {\n      return setPost([]);\n    };\n  }, []);\n  useEffect(function () {\n    if (page > 0) {\n      var timer = setInterval(function () {\n        fetching();\n      }, 10000);\n      return function () {\n        return clearInterval(timer);\n      };\n    }\n  }, [page]);\n  return _jsxs(\"div\", {\n    \"data-testid\": \"hide\",\n    children: [_jsx(Typography, {\n      variant: \"h5\",\n      style: {\n        textAlign: \"center\"\n      },\n      \"data-testid\": \"heading\",\n      children: \"Posts\"\n    }), post.length > 0 && _jsx(SendingData, {\n      post: post,\n      fetching: fetching,\n      noMore: noMore\n    })]\n  });\n};\n\nexport default FetchingData;","map":{"version":3,"sources":["C:/Users/extwe/Downloads/DataGridFetchingPosts/src/FetchingData.tsx"],"names":["React","useState","useEffect","axios","SendingData","Typography","FetchingData","post","setPost","page","setPage","noMore","setNoMore","fetching","console","log","get","then","res","data","nbPages","temp","hits","map","i","index","push","id","objectID","title","url","author","created_at","Created","timer","setInterval","clearInterval","textAlign","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP;AACA,SAASC,UAAT,QAA2B,eAA3B;;;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,kBAAwBL,QAAQ,CAAM,EAAN,CAAhC;AAAA;AAAA,MAAOM,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAwBP,QAAQ,CAAM,CAAN,CAAhC;AAAA;AAAA,MAAOQ,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA4BT,QAAQ,CAAM,IAAN,CAApC;AAAA;AAAA,MAAOU,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AACfC,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBN,IAAtB;AACAN,YAAAA,KAAK,CACFa,GADH,mEAEoEP,IAFpE,EAIGQ,IAJH,CAIQ,UAACC,GAAD,EAAc;AAAA;;AAClBN,cAAAA,SAAS,CAAC,CAAAM,GAAG,QAAH,yBAAAA,GAAG,CAAEC,IAAL,+BAAWC,OAAX,KAAsB,CAAvB,CAAT;AACA,kBAAMC,IAAS,GAAG,EAAlB;AACAH,cAAAA,GAAG,QAAH,0BAAAA,GAAG,CAAEC,IAAL,mDAAWG,IAAX,qCAAiBC,GAAjB,CAAqB,UAACC,CAAD,EAASC,KAAT,EAA2B;AAC9CJ,gBAAAA,IAAI,CAACK,IAAL,CAAU;AAAEC,kBAAAA,EAAE,EAAEH,CAAC,CAACI,QAAF,GAAa,EAAb,GAAkBH,KAAxB;AAA8BI,kBAAAA,KAAK,EAAEL,CAAC,CAACK,KAAvC;AAA6CC,kBAAAA,GAAG,EAAEN,CAAC,CAACM,GAApD;AAAwDC,kBAAAA,MAAM,EAAEP,CAAC,CAACQ,UAAlE;AAA6EC,kBAAAA,OAAO,EAAET,CAAC,CAACO;AAAxF,iBAAV;AAED,eAHD;AAIArB,cAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACAD,cAAAA,OAAO,8BAAKD,IAAL,GAAcc,IAAd,EAAP;AACD,aAbH;;AAFe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAkBAnB,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,QAAQ;AACR,WAAO;AAAA,aAAML,OAAO,CAAC,EAAD,CAAb;AAAA,KAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAIAN,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIO,IAAI,GAAG,CAAX,EAAc;AACZ,UAAMyB,KAAK,GAAGC,WAAW,CAAC,YAAM;AAC9BtB,QAAAA,QAAQ;AACT,OAFwB,EAEtB,KAFsB,CAAzB;AAGA,aAAO;AAAA,eAAMuB,aAAa,CAACF,KAAD,CAAnB;AAAA,OAAP;AACD;AACF,GAPQ,EAON,CAACzB,IAAD,CAPM,CAAT;AASA,SACE;AAAK,mBAAY,MAAjB;AAAA,eACE,KAAC,UAAD;AACE,MAAA,OAAO,EAAC,IADV;AAEE,MAAA,KAAK,EAAE;AAAE4B,QAAAA,SAAS,EAAE;AAAb,OAFT;AAGE,qBAAY,SAHd;AAAA;AAAA,MADF,EAQG9B,IAAI,CAAC+B,MAAL,GAAc,CAAd,IACC,KAAC,WAAD;AAAa,MAAA,IAAI,EAAE/B,IAAnB;AAAyB,MAAA,QAAQ,EAAEM,QAAnC;AAA6C,MAAA,MAAM,EAAEF;AAArD,MATJ;AAAA,IADF;AAcD,CAjDD;;AAmDA,eAAeL,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SendingData from \"./SendingData\";\nimport { Typography } from \"@mui/material\";\n\nconst FetchingData = () => {\n  const [post, setPost] = useState<any>([]);\n  const [page, setPage] = useState<any>(0);\n  const [noMore, setNoMore] = useState<any>(true);\n  const fetching = async () => {\n    console.log(\"page no\",page)\n    axios\n      .get(\n        `https://hn.algolia.com/api/v1/search_by_date?tags=story&page=${page}`\n      )\n      .then((res: any) => {\n        setNoMore(res?.data?.nbPages >= 0);\n        const temp: any = [];\n        res?.data?.hits?.map((i: any, index: number) => {\n          temp.push({ id: i.objectID + \"\" + index,title: i.title,url: i.url,author: i.created_at,Created: i.author,});\n\n        });\n        setPage(page + 1);\n        setPost([...post, ...temp]);\n      });\n  };\n\n  useEffect(() => {\n    fetching();\n    return () => setPost([]);\n  }, []);\n  useEffect(() => {\n    if (page > 0) {\n      const timer = setInterval(() => {\n        fetching();\n      }, 10000);\n      return () => clearInterval(timer);\n    }\n  }, [page]);\n\n  return (\n    <div data-testid=\"hide\">\n      <Typography\n        variant=\"h5\"\n        style={{ textAlign: \"center\" }}\n        data-testid=\"heading\"\n      >\n        Posts\n      </Typography>\n      {post.length > 0 && (\n        <SendingData post={post} fetching={fetching} noMore={noMore} />\n      )}\n    </div>\n  );\n};\n\nexport default FetchingData;\n"]},"metadata":{},"sourceType":"module"}